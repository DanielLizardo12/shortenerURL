plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.dreamsw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'io.projectreactor:reactor-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.jacoco:org.jacoco.core:0.8.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Jacoco configuration starts
test {
	finalizedBy jacocoTestReport // report is always generated after test run
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, excludes: [
					"com/dreamsw/shortenerURL/Application.class",
					"**/model/*"
			])
		}))
	}
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			excludes = [
					'com.dreamsw.shortenerURL.Application',
					'**.model.**']
			limit {
				minimum = 0.9
			}
		}
	}
}

build {
	dependsOn jacocoTestCoverageVerification
}